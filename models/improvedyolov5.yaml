# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license

# Parameters
nc: 80 # number of classes
depth_multiple: 0.33 # model depth multiple
width_multiple: 0.50 # layer channel multiple
anchors:
  - [10, 13, 16, 30, 33, 23] # P3/8
  - [30, 61, 62, 45, 59, 119] # P4/16
  - [116, 90, 156, 198, 373, 326] # P5/32

# YOLOv5 v6.0 backbone
backbone:
  # [from, number, module, args]
  [
    [-1, 1, Conv, [64, 6, 2, 2]], # 0-P1/2
    [-1, 1, Conv, [128, 3, 2]], # 1-P2/4
    [-1, 3, C3, [128]], # 2-P3/8
    [-1, 1, Conv, [256, 3, 2]], # 3-P3/8
    [-1, 6, C3, [256]], # 4-P4/16
    [-1, 1, Conv, [512, 3, 2]], # 5-P4/16
    [-1, 9, C3, [512]], # 6-P5/32
    [-1, 1, Conv, [1024, 3, 2]], # 7-P5/32
    [-1, 3, C3, [1024]], # 8-P5/32
    [-1, 1, SPPF, [1024, 5]], # 9-SPPF
  ]

# YOLOv5 v6.0 head
head: [
    # P5/32 -> P4/16
    [-1, 1, SwinT, [1024, 8, 4]], # 0-Swin-T Block for P5
    [-1, 1, CBAM, [1024]], # 1-CBAM for P5
    [-1, 1, Conv, [512, 1, 1]], # 2-Downsample to 512
    [-1, 1, nn.Upsample, [None, 2, "nearest"]], # 3-Up to P4
    [[-1, 6], 1, Concat, [1]], # 4-Concat with backbone P4
    [-1, 1, C2F_CA, [512, 2]], # 5-C2F-CA for P4

    # P4/16 -> P3/8
    [-1, 1, Conv, [256, 1, 1]], # 6-Downsample to 256
    [-1, 1, nn.Upsample, [None, 2, "nearest"]], # 7-Up to P3
    [[-1, 3], 1, Concat, [1]], # 8-Concat with backbone P3
    [-1, 1, C2F_CA, [256, 2]], # 9-C2F-CA for P3

    # P3/8 -> P4/16
    [-1, 1, Conv, [256, 3, 2]], # 10-Downsample to P4
    [[-1, 5], 1, Concat, [1]], # 11-Concat with P4
    [-1, 1, C2F_CA, [512, 2]], # 12-C2F-CA for P4

    # P4/16 -> P5/32
    [-1, 1, Conv, [512, 3, 2]], # 13-Downsample to P5
    [[-1, 1], 1, Concat, [1]], # 14-Concat with P5
    [-1, 1, C2F_CA, [1024, 2]], # 15-C2F-CA for P5

    # Final Detect (All scales)
    [[9, 12, 15], 1, Detect, [nc, anchors]], # Detect(P3, P4, P5)
]